---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by avikulin.
--- DateTime: 19.03.2024 13:53
---


local http_client = require('http.client').new()
local utils = require('app.src.validation_utils')


OpenWeather = { uri="", x_coord_param_name = "", y_coord_param_name ="", actuality_opts={}, query_opts=""}

function OpenWeather:new(uri, x_param_name, y_param_name, actuality_opts_param_name, query_opts_param_name)
    -- проверяем переданные параметры
    local err_msg = "Invalid <OpenWeather> class constructor parameter value"
    if(
        ~utils.validate_string_value("uri", uri, err_msg) or
        ~utils.validate_string_value("x_param_name", x_param_name, err_msg) or
        ~utils.validate_string_value("y_param_name", y_param_name, err_msg) or
        ~utils.validate_array_value("actuality_opts_param_name", actuality_opts_param_name, err_msg) or
        ~utils.validate_array_value("query_opts_param_name", query_opts_param_name, err_msg)
    ) then
        error("Class <OpenWeather> constructor runtime error")
    end

    -- инициализируем имена параметров для формирования URI будущих вызовов
    self.uri = uri
    self.x_coord_param_name = x_param_name
    self.y_coord_param_name = y_param_name
    self.actuality_opts = actuality_opts_param_name
    self.query_opts = query_opts_param_name
end

function OpenWeather:get_weather_info(x_coord, y_coord, actuality)
    -- Проверяем корректность переданных параметров
    local err_msg = "Invalid <OpenWeather:getWeather> query parameters"
    if (
        ~utils.validate_numeric_value("x_coord", x_coord, -180, 180, err_msg) or
        ~utils.validate_numeric_value("y_coord", y_coord, -180, 180, err_msg) or
        ~utils.validate_value_present_in_array("actuality", self.actuality_opts, actuality, err_msg)

    ) then
        return ("EROOR!\nInvalid run-time parameters passed: "
            .."x_coord = "..x_coord..", "
            .."y_coord = "..y_coord..", "
            .."actuality = "..actuality
        )
    end

    -- Если до этого момента мы не упали с ошибкой - вызываем сервис
    local weather_options = ""
    for i, v in ipairs(self.query_opts) do
        weather_options = weather_options..","..v
    end

    local http_params_values = {
        [self.x_coord_param_name]=x_coord,
        [self.y_coord_param_name]=y_coord,
        [actuality]=weather_options
    }

    return http_client:get(self.uri, { params = http_params_values })
end

return OpenWeather
