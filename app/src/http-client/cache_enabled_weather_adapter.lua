---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by andreyv.
--- DateTime: 21.03.2024 15:15
---

local vshard = require('vshard')
local json = require('json')
local log = require('log').new("cache_enabled_weather_adapter")
local date = require('datetime')

local cache_dal_metadata = require('app.src.config.cache_dal_metadata')
local weather_provider = require('app.src.http-client.open_weather_adapter')

local function create_request_id(x_coord, y_coord)
    return tostring(x_coord).."-"..tostring(y_coord)
end

local function get_http_weather_data(weather_cfg, x_coord, y_coord, actuality)
    local request_key = create_request_id(x_coord, y_coord)
    local request_path = actuality
    local bucket_id = vshard.router.bucket_id({request_key, request_path})

    --- для начала ищем данные в кэше
    local data, err = vshard.router.call(
        bucket_id, { mode = 'read', prefer_replica=true }, 'cache_lookup', { request_key, request_path }
    )

    -- если что-то пошло не так, возвращаем текст ошибки в составе ответа
    if (err ~= nil) then
        local msg = json.encode(err)
        log.error("Cache access error : %s", msg)
        return {
                    data = nil,
                    error_message = msg,
                    cached = false,
                    ttl=0,
                    cache_hit_rate = 0,
                    status = 500
        }
    end

    -- если в кэше ничего нет, обращаемся к OpenMeteo API
    if (data == nil) then
        log.info("Data is absent in cache. Requesting OpenMeteo API...")
        local weather_data = weather_provider.get_http_weather_data(weather_cfg, x_coord, y_coord, actuality)
        log.info("Responce received: "..json.encode(weather_data))

        -- добавляем полученную информацию в кэш
        local request_key = create_request_id(x_coord, y_coord)
        local request_path = actuality
        local bucket_id = vshard.router.bucket_id({request_key, request_path})

        local weather_dto = {
            request_key = request_key,
            request_path = request_path,
            bucket_id = bucket_id,
            response_data = json.encode(weather_data), -- сохраняем в виде JSON-строки
            usage_rating= 0,
            created_moment = date.now()
        }

        log.info("Append data to cache : "..json.encode(weather_dto))

        local res, err = vshard.router.call(
            bucket_id, { mode = 'write', prefer_replica=true }, 'cache_put', { weather_dto }
        )

        if (err ~= nil) then
            log.error("Cache access error : "..json.encode(err))
        end

        return {
                data = json.encode(weather_data),
                error_message = "",
                cached = false,
                ttl = 0,
                cache_hit_rate = 0,
                status = 200
        }
    end

    -- если дошли до сюда - значит данные были в кеше и TTL еще не истек
    return {
                data = data['response_data'],
                error_message = "",
                cached = true,
                ttl=data[cache_dal_metadata.get_cfg_ttl_key()],
                cache_hit_rate = data['usage_rating'],
                status = 200
    }
end

return {
    get_http_weather_data = get_http_weather_data
}
